app.fetch:
  base-url: 'https://m.vk.com'
  search-pattern-age: '/search?c[age_from]=29&c[age_to]=30&c[city]=1&c[country]=1&c[name]=1&c[per_page]=40&c[q]={reservist_name}&c[section]=people'
  search-pattern: '/search'
#  search-pattern: '/search?c[bday]=29&c[bmonth]=3&c[city]=1&c[byear]=1992&c[country]=1&c[name]=1&c[per_page]=40&c[q]={reservist_name}&c[section]=people'
  user-pattern: '/{user_id}?act=info'
app.vk-api:
  auth-url: 'https://oauth.vk.com/access_token'
  base-url: 'https://api.vk.com/method'
  user-endpoint: '/users.get'
  search-endpoint: '/users.search'
  cities-endpoint: '/database.getCities'
  api-version: '5.194'
  access-token: ${VK_ACCESS_TOKEN}
  fields: bdate,city,country,last_seen,deactivated,is_closed,about,activities,books,career,connections,contacts,counters,domain,education,exports,followers_count,has_mobile,has_photo,home_town,military,movies,music,nickname,occupation,personal,quotes,relatives,relation,schools,sex,site,status,universities

logging:
  level:
    net.shyshkin: debug

server:
  error:
    include-message: always
---
spring:
  config:
    activate:
      on-profile: mock
app.fetch:
  base-url: 'http://localhost:1080'
app.vk-api:
  auth-url: 'http://localhost:1080/access_token'
  base-url: 'http://localhost:1080/method'
  access-token: 'super-secret-access-token'